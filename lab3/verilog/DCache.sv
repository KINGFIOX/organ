// Generated by CIRCT firtool-1.62.0
// external module blk_mem_gen_1

module DCache(
  input          cpu_clk,
                 cpu_rst,
  input  [31:0]  data_addr,
  input  [3:0]   data_ren,
  output [31:0]  data_rdata,
  output         data_valid,
  input  [3:0]   data_wen,
  input  [31:0]  data_wdata,
  output         data_wresp,
  input          dev_wrdy,
  output [3:0]   dev_wen,
  output [31:0]  dev_waddr,
                 dev_wdata,
  input          dev_rrdy,
  output [3:0]   dev_ren,
  output [31:0]  dev_raddr,
  input          dev_rvalid,
  input  [127:0] dev_rdata,
  output         hit_r,
                 hit_w
);

  wire [3:0]       dev_wen_0;
  wire [31:0]      _GEN;
  wire [127:0]     _U_dsram_douta;
  wire [127:0]     _tagSram_douta;
  wire             uncached =
    (&(data_addr[31:16])) & ((|data_ren) | (|data_wen));
  reg  [2:0]       r_state;
  reg  [3:0]       ren_r;
  wire             _GEN_0 = r_state == 3'h0;
  wire             _GEN_1 = r_state == 3'h1;
  wire             _GEN_2 = _tagSram_douta[23:0] == {1'h1, data_addr[31:9]};
  wire [3:0][31:0] _GEN_3 =
    {{_U_dsram_douta[127:96]},
     {_U_dsram_douta[95:64]},
     {_U_dsram_douta[63:32]},
     {_U_dsram_douta[31:0]}};
  wire             _GEN_4 = r_state == 3'h2;
  wire [3:0]       _GEN_5 = dev_rrdy ? ren_r : 4'h0;
  wire             _GEN_6 = r_state == 3'h3;
  wire             _GEN_7 = r_state == 3'h4;
  wire             _GEN_8 = ~(_GEN_0 | _GEN_1 | _GEN_4 | _GEN_6) & _GEN_7 & dev_rvalid;
  wire [5:0]       _GEN_9 = {1'h0, data_addr[8:4]};
  wire             _GEN_10 = r_state == 3'h5;
  wire [3:0]       _GEN_11 = _GEN_7 | ~(_GEN_10 & dev_rrdy) ? 4'h0 : ren_r;
  wire [7:0][3:0]  _GEN_12 =
    {{_GEN_11},
     {_GEN_11},
     {_GEN_11},
     {4'h0},
     {_GEN_5},
     {_GEN_5},
     {4'h0},
     {uncached & (|data_ren) & dev_rrdy ? data_ren : 4'h0}};
  wire             _GEN_13 = r_state == 3'h6 & dev_rvalid;
  wire             _GEN_14 = _GEN_4 | _GEN_6 | _GEN_7 | _GEN_10;
  wire [31:0]      _GEN_15 = _GEN_14 | ~_GEN_13 ? 32'h0 : dev_rdata[31:0];
  wire [7:0][31:0] _GEN_16 =
    {{_GEN_15},
     {_GEN_15},
     {32'h0},
     {32'h0},
     {32'h0},
     {32'h0},
     {_GEN_2 ? _GEN_3[data_addr[3:2]] : 32'h0},
     {_GEN_15}};
  assign _GEN = _GEN_16[r_state];
  reg  [2:0]       w_state;
  reg  [3:0]       wen_r;
  wire             wr_resp = dev_wrdy & dev_wen_0 == 4'h0;
  wire             _GEN_17 = w_state == 3'h0;
  wire             _GEN_18 = _GEN_17 & (|data_wen);
  wire             _GEN_19 = w_state == 3'h5;
  assign dev_wen_0 =
    _GEN_17
      ? ((|data_wen) & dev_rrdy ? data_wen : 4'h0)
      : _GEN_19 & (dev_rrdy | dev_wrdy) ? wen_r : 4'h0;
  wire             _GEN_20 = w_state == 3'h6;
  always @(posedge cpu_clk) begin
    if (cpu_rst) begin
      r_state <= 3'h0;
      ren_r <= 4'h0;
      w_state <= 3'h0;
      wen_r <= 4'h0;
    end
    else begin
      automatic logic [2:0]      _GEN_21 = dev_rrdy ? 3'h4 : 3'h3;
      automatic logic [2:0]      _GEN_22 = _GEN_13 ? 3'h0 : r_state;
      automatic logic [7:0][2:0] _GEN_23 =
        {{_GEN_22},
         {_GEN_22},
         {dev_rrdy ? 3'h6 : r_state},
         {dev_rvalid ? 3'h1 : 3'h4},
         {_GEN_21},
         {_GEN_21},
         {{1'h0, ~_GEN_2, 1'h0}},
         {(|data_ren) ? (uncached ? (dev_rrdy ? 3'h6 : 3'h5) : 3'h1) : r_state}};
      r_state <= _GEN_23[r_state];
      if (_GEN_0) begin
        if (uncached) begin
          if (~(|data_ren) | dev_rrdy) begin
          end
          else
            ren_r <= data_ren;
        end
        else if (|data_ren)
          ren_r <= data_ren;
      end
      if (_GEN_17)
        w_state <= (|data_wen) ? (dev_wrdy ? 3'h6 : 3'h5) : 3'h0;
      else if (_GEN_19)
        w_state <= dev_wrdy ? 3'h6 : 3'h5;
      else if (_GEN_20) begin
        if (wr_resp)
          w_state <= 3'h0;
        else
          w_state <= 3'h6;
      end
      if (~_GEN_18 | dev_rrdy) begin
      end
      else
        wen_r <= data_wen;
    end
  end // always @(posedge)
  blk_mem_gen_1 tagSram (
    .clka  (cpu_clk),
    .wea   (_GEN_8),
    .addra (_GEN_9),
    .dina  ({105'h1, data_addr[31:9]}),
    .douta (_tagSram_douta)
  );
  blk_mem_gen_1 U_dsram (
    .clka  (cpu_clk),
    .wea   (_GEN_8),
    .addra (_GEN_9),
    .dina  (dev_rdata),
    .douta (_U_dsram_douta)
  );
  assign data_rdata = _GEN_0 ? 32'h0 : _GEN;
  assign data_valid =
    ~_GEN_0 & (_GEN_1 ? _GEN_2 : ~_GEN_14 & _GEN_13 & dev_rdata[0]);
  assign data_wresp = ~(_GEN_17 | _GEN_19) & _GEN_20 & wr_resp;
  assign dev_wen = dev_wen_0;
  assign dev_waddr = _GEN_18 ? data_addr : 32'h0;
  assign dev_wdata = _GEN_18 ? data_wdata : 32'h0;
  assign dev_ren = _GEN_12[r_state];
  assign dev_raddr =
    _GEN_0
      ? (uncached & (|data_ren) ? data_addr : 32'h0)
      : _GEN_1 | ~_GEN_4 | _GEN_0 ? 32'h0 : _GEN;
  assign hit_r = ~_GEN_0 & _GEN_1 & _GEN_2;
  assign hit_w = 1'h0;
endmodule

