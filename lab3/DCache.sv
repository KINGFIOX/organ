// Generated by CIRCT firtool-1.62.0
// external module blk_mem_gen_1

module DCache(
  input          clock,
                 reset,
  input  [3:0]   io_data_ren,
  input  [31:0]  io_data_addr,
  output         io_data_valid,
  output [31:0]  io_data_rdata,
  input  [3:0]   io_data_wen,
  input  [31:0]  io_data_wdata,
  output         io_data_wresp,
  input          io_dev_wrdy,
  output [3:0]   io_dev_wen,
  output [31:0]  io_dev_waddr,
                 io_dev_wdata,
  input          io_dev_rrdy,
  output [3:0]   io_dev_ren,
  output [31:0]  io_dev_raddr,
  input          io_dev_rvalid,
  input  [127:0] io_dev_rdata
);

  wire [127:0]     _U_dsram_douta;
  wire [127:0]     _tagSram_douta;
  wire             uncached =
    (&(io_data_addr[31:16])) & ((|io_data_ren) | (|io_data_wen));
  wire [5:0]       _GEN = {1'h0, io_data_addr[8:4]};
  reg  [2:0]       r_state;
  reg  [3:0]       ren_r;
  wire             _GEN_0 = r_state == 3'h0;
  wire             _GEN_1 = r_state == 3'h1;
  wire             _GEN_2 = r_state == 3'h2;
  wire             _GEN_3 = r_state == 3'h3;
  wire             _GEN_4 = _tagSram_douta[23:0] == {1'h1, io_data_addr[31:9]};
  wire             _GEN_5 = _GEN_0 | _GEN_1;
  wire [3:0][31:0] _GEN_6 =
    {{_U_dsram_douta[127:96]},
     {_U_dsram_douta[95:64]},
     {_U_dsram_douta[63:32]},
     {_U_dsram_douta[31:0]}};
  wire             _GEN_7 = r_state == 3'h4;
  wire             _GEN_8 = _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3;
  wire             _GEN_9 = ~_GEN_8 & _GEN_7 & io_dev_rvalid;
  wire             _GEN_10 = _GEN_7 & io_dev_rvalid;
  wire             _GEN_11 = _GEN_8 | ~_GEN_10;
  reg  [1:0]       w_state;
  reg  [3:0]       wen_r;
  reg  [31:0]      wdata;
  reg              wr_resp_REG;
  wire             wr_resp = ~wr_resp_REG & io_dev_wrdy;
  wire             _GEN_12 = w_state == 2'h0;
  wire             _GEN_13 = w_state == 2'h1;
  wire             _GEN_14 = _GEN_12 | ~(_GEN_13 & io_dev_wrdy);
  wire             _GEN_15 =
    _GEN_13 & io_dev_wrdy & ~uncached & ~(|(io_data_addr[1:0])) & _GEN_4;
  wire             _GEN_16 = w_state == 2'h2;
  always @(posedge clock) begin
    if (reset) begin
      r_state <= 3'h0;
      ren_r <= 4'h0;
      w_state <= 2'h0;
      wen_r <= 4'h0;
      wdata <= 32'h0;
    end
    else begin
      if (_GEN_0) begin
        if (|io_data_ren)
          r_state <= {1'h0, ~(uncached | (|(io_data_addr[1:0]))), 1'h1};
      end
      else if (_GEN_1) begin
        if (io_dev_rrdy)
          r_state <= 3'h2;
      end
      else if (_GEN_2) begin
        if (io_dev_rvalid)
          r_state <= 3'h0;
      end
      else if (_GEN_3) begin
        if (_GEN_4)
          r_state <= 3'h0;
        else if (io_dev_rrdy)
          r_state <= 3'h4;
      end
      else if (_GEN_10)
        r_state <= 3'h3;
      if (_GEN_0 & (|io_data_ren))
        ren_r <= io_data_ren;
      if (_GEN_12) begin
        if (|io_data_wen)
          w_state <= 2'h1;
      end
      else if (_GEN_13) begin
        if (io_dev_wrdy)
          w_state <= 2'h2;
      end
      else if (_GEN_16 & wr_resp)
        w_state <= 2'h0;
      if (_GEN_12 & (|io_data_wen)) begin
        wen_r <= io_data_wen;
        wdata <= io_data_wdata;
      end
    end
    wr_resp_REG <= io_dev_wrdy;
  end // always @(posedge)
  blk_mem_gen_1 tagSram (
    .clka  (clock),
    .wea   (_GEN_9),
    .addra (_GEN),
    .dina  (_GEN_11 ? 128'h0 : {105'h1, io_data_addr[31:9]}),
    .douta (_tagSram_douta)
  );
  blk_mem_gen_1 U_dsram (
    .clka  (clock),
    .wea   (~_GEN_12 & _GEN_15 | _GEN_9),
    .addra (_GEN),
    .dina
      (_GEN_12 | ~_GEN_15
         ? (_GEN_11 ? 128'h0 : io_dev_rdata)
         : {(&(io_data_addr[3:2])) ? wdata : _U_dsram_douta[127:96],
            io_data_addr[3:2] == 2'h2 ? wdata : _U_dsram_douta[95:64],
            io_data_addr[3:2] == 2'h1 ? wdata : _U_dsram_douta[63:32],
            io_data_addr[3:2] == 2'h0 ? wdata : _U_dsram_douta[31:0]}),
    .douta (_U_dsram_douta)
  );
  assign io_data_valid = ~_GEN_5 & (_GEN_2 ? io_dev_rvalid : _GEN_3 & _GEN_4);
  assign io_data_rdata =
    _GEN_5
      ? 32'h0
      : _GEN_2
          ? (io_dev_rvalid ? io_dev_rdata[31:0] : 32'h0)
          : _GEN_3 & _GEN_4 ? _GEN_6[io_data_addr[3:2]] : 32'h0;
  assign io_data_wresp = ~(_GEN_12 | _GEN_13) & _GEN_16 & wr_resp;
  assign io_dev_wen = _GEN_14 ? 4'h0 : wen_r;
  assign io_dev_waddr = _GEN_14 ? 32'h0 : io_data_addr;
  assign io_dev_wdata = _GEN_14 ? 32'h0 : wdata;
  assign io_dev_ren =
    _GEN_0
      ? 4'h0
      : _GEN_1
          ? (io_dev_rrdy ? ren_r : 4'h0)
          : _GEN_2 | ~_GEN_3 | _GEN_4 ? 4'h0 : {4{io_dev_rrdy}};
  assign io_dev_raddr =
    _GEN_0
      ? 32'h0
      : _GEN_1
          ? (io_dev_rrdy ? io_data_addr : 32'h0)
          : _GEN_2 | ~_GEN_3 | _GEN_4 | ~io_dev_rrdy ? 32'h0 : {io_data_addr[31:4], 4'h0};
endmodule

