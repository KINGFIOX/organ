// Generated by CIRCT firtool-1.62.0
// external module blk_mem_gen_1

module LRU(
  input        clock,
               reset,
               io_hitVec_0,
               io_hitVec_1,
               io_hitVec_2,
               io_hitVec_3,
  output [1:0] io_victim
);

  reg [1:0] lruMatrix_value;
  reg [1:0] lruMatrix_value_1;
  reg [1:0] lruMatrix_value_2;
  reg [1:0] lruMatrix_value_3;
  reg       wrap;
  reg [1:0] wrap_index;
  reg [1:0] maxIndex;
  always @(posedge clock) begin
    if (reset) begin
      lruMatrix_value <= 2'h0;
      lruMatrix_value_1 <= 2'h0;
      lruMatrix_value_2 <= 2'h0;
      lruMatrix_value_3 <= 2'h0;
      wrap <= 1'h0;
      wrap_index <= 2'h0;
      maxIndex <= 2'h0;
    end
    else begin
      if (io_hitVec_0)
        lruMatrix_value <= 2'h0;
      else
        lruMatrix_value <= lruMatrix_value + 2'h1;
      if (io_hitVec_1)
        lruMatrix_value_1 <= 2'h0;
      else
        lruMatrix_value_1 <= lruMatrix_value_1 + 2'h1;
      if (io_hitVec_2)
        lruMatrix_value_2 <= 2'h0;
      else
        lruMatrix_value_2 <= lruMatrix_value_2 + 2'h1;
      if (io_hitVec_3)
        lruMatrix_value_3 <= 2'h0;
      else
        lruMatrix_value_3 <= lruMatrix_value_3 + 2'h1;
      wrap <=
        ~io_hitVec_3 & (&lruMatrix_value_3) | ~io_hitVec_2 & (&lruMatrix_value_2)
        | ~io_hitVec_1 & (&lruMatrix_value_1) | ~io_hitVec_0 & (&lruMatrix_value) | wrap;
      if (io_hitVec_3 | ~(&lruMatrix_value_3)) begin
        if (io_hitVec_2 | ~(&lruMatrix_value_2)) begin
          if (io_hitVec_1 | ~(&lruMatrix_value_1)) begin
            if (io_hitVec_0 | ~(&lruMatrix_value)) begin
            end
            else
              wrap_index <= 2'h0;
          end
          else
            wrap_index <= 2'h1;
        end
        else
          wrap_index <= 2'h2;
      end
      else
        wrap_index <= 2'h3;
      if (wrap)
        maxIndex <= wrap_index;
      else begin
        automatic logic [3:0][1:0] _GEN =
          {{lruMatrix_value_3},
           {lruMatrix_value_2},
           {lruMatrix_value_1},
           {lruMatrix_value}};
        automatic logic [1:0]      _GEN_0;
        _GEN_0 = _GEN[maxIndex];
        if (lruMatrix_value_3 > _GEN_0)
          maxIndex <= 2'h3;
        else if (lruMatrix_value_2 > _GEN_0)
          maxIndex <= 2'h2;
        else if (lruMatrix_value_1 > _GEN_0)
          maxIndex <= 2'h1;
      end
    end
  end // always @(posedge)
  assign io_victim = maxIndex;
endmodule

module DCache(
  input          clock,
                 reset,
  input  [3:0]   io_data_ren,
  input  [31:0]  io_data_addr,
  output         io_data_valid,
  output [31:0]  io_data_rdata,
  input  [3:0]   io_data_wen,
  input  [31:0]  io_data_wdata,
  output         io_data_wresp,
  input          io_dev_wrdy,
  output [3:0]   io_dev_wen,
  output [31:0]  io_dev_waddr,
                 io_dev_wdata,
  input          io_dev_rrdy,
  output [3:0]   io_dev_ren,
  output [31:0]  io_dev_raddr,
  input          io_dev_rvalid,
  input  [127:0] io_dev_rdata,
  output         io_hit_r,
                 io_hit_w,
                 io_uncached
);

  wire [1:0]        _lru_io_victim;
  wire [127:0]      _blk_mem_gen_1_7_douta;
  wire [127:0]      _blk_mem_gen_1_6_douta;
  wire [127:0]      _blk_mem_gen_1_5_douta;
  wire [127:0]      _blk_mem_gen_1_4_douta;
  wire [127:0]      _blk_mem_gen_1_3_douta;
  wire [127:0]      _blk_mem_gen_1_2_douta;
  wire [127:0]      _blk_mem_gen_1_1_douta;
  wire [127:0]      _blk_mem_gen_1_douta;
  wire [3:0][31:0]  _GEN = '{32'h0, 32'h0, 32'h0, 32'h0};
  wire              io_uncached_0 =
    (&(io_data_addr[31:16])) & ((|io_data_ren) | (|io_data_wen));
  reg  [1:0]        hitIndex;
  wire [5:0]        tagSrams_3_addra = {1'h0, io_data_addr[8:4]};
  wire [23:0]       _tagSrams_dina_T = {1'h1, io_data_addr[31:9]};
  wire              hitVec_0 = _blk_mem_gen_1_douta[23:0] == _tagSrams_dina_T;
  wire              hitVec_1 = _blk_mem_gen_1_1_douta[23:0] == _tagSrams_dina_T;
  wire              hitVec_2 = _blk_mem_gen_1_2_douta[23:0] == _tagSrams_dina_T;
  wire              hitVec_3 = _blk_mem_gen_1_3_douta[23:0] == _tagSrams_dina_T;
  reg  [2:0]        r_state;
  reg  [3:0]        ren_r;
  wire              _GEN_0 = r_state == 3'h0;
  wire              _GEN_1 = r_state == 3'h1;
  wire              _GEN_2 = r_state == 3'h2;
  wire              _GEN_3 = r_state == 3'h3;
  wire [3:0]        _GEN_4 = {hitVec_3, hitVec_2, hitVec_1, hitVec_0};
  wire              _GEN_5 = _GEN_3 & (|_GEN_4);
  wire              _GEN_6 = _GEN_0 | _GEN_1;
  wire [3:0][31:0]  _GEN_7 =
    hitVec_3
      ? {{_blk_mem_gen_1_7_douta[127:96]},
         {_blk_mem_gen_1_7_douta[95:64]},
         {_blk_mem_gen_1_7_douta[63:32]},
         {_blk_mem_gen_1_7_douta[31:0]}}
      : hitVec_2
          ? {{_blk_mem_gen_1_6_douta[127:96]},
             {_blk_mem_gen_1_6_douta[95:64]},
             {_blk_mem_gen_1_6_douta[63:32]},
             {_blk_mem_gen_1_6_douta[31:0]}}
          : hitVec_1
              ? {{_blk_mem_gen_1_5_douta[127:96]},
                 {_blk_mem_gen_1_5_douta[95:64]},
                 {_blk_mem_gen_1_5_douta[63:32]},
                 {_blk_mem_gen_1_5_douta[31:0]}}
              : hitVec_0
                  ? {{_blk_mem_gen_1_4_douta[127:96]},
                     {_blk_mem_gen_1_4_douta[95:64]},
                     {_blk_mem_gen_1_4_douta[63:32]},
                     {_blk_mem_gen_1_4_douta[31:0]}}
                  : _GEN;
  wire              _GEN_8 = r_state == 3'h4 & io_dev_rvalid;
  wire              _GEN_9 = _GEN_0 | _GEN_1 | _GEN_2 | _GEN_3;
  wire              tagSrams_0_wea = ~_GEN_9 & _GEN_8 & _lru_io_victim == 2'h0;
  wire              tagSrams_1_wea = ~_GEN_9 & _GEN_8 & _lru_io_victim == 2'h1;
  wire              tagSrams_2_wea = ~_GEN_9 & _GEN_8 & _lru_io_victim == 2'h2;
  wire              tagSrams_3_wea = ~_GEN_9 & _GEN_8 & (&_lru_io_victim);
  wire [127:0]      tagSrams_3_dina = {105'h1, io_data_addr[31:9]};
  reg  [1:0]        w_state;
  reg  [3:0]        wen_r;
  reg  [31:0]       wdata;
  reg               wr_resp_REG;
  wire              wr_resp = ~wr_resp_REG & io_dev_wrdy;
  wire              _GEN_10 = w_state == 2'h0;
  wire              _GEN_11 = w_state == 2'h1;
  wire              _GEN_12 = _GEN_11 & io_dev_wrdy;
  wire              _GEN_13 = _GEN_10 | ~_GEN_12;
  wire              _GEN_14 = ~io_uncached_0 & ~(|(io_data_addr[1:0])) & (|_GEN_4);
  wire [3:0][127:0] _GEN_15 =
    {{_blk_mem_gen_1_7_douta},
     {_blk_mem_gen_1_6_douta},
     {_blk_mem_gen_1_5_douta},
     {_blk_mem_gen_1_4_douta}};
  wire [127:0]      _line_WIRE = _GEN_15[hitIndex];
  wire              _GEN_16 = _GEN_11 & io_dev_wrdy & _GEN_14 & hitIndex == 2'h0;
  wire              _GEN_17 = _GEN_11 & io_dev_wrdy & _GEN_14 & hitIndex == 2'h1;
  wire              _GEN_18 = _GEN_11 & io_dev_wrdy & _GEN_14 & hitIndex == 2'h2;
  wire              _GEN_19 = _GEN_11 & io_dev_wrdy & _GEN_14 & (&hitIndex);
  wire [127:0]      _dataSrams_dina_T =
    {(&(io_data_addr[3:2])) ? wdata : _line_WIRE[127:96],
     io_data_addr[3:2] == 2'h2 ? wdata : _line_WIRE[95:64],
     io_data_addr[3:2] == 2'h1 ? wdata : _line_WIRE[63:32],
     io_data_addr[3:2] == 2'h0 ? wdata : _line_WIRE[31:0]};
  wire              _GEN_20 = w_state == 2'h2;
  always @(posedge clock) begin
    if (reset) begin
      hitIndex <= 2'h0;
      r_state <= 3'h0;
      ren_r <= 4'h0;
      w_state <= 2'h0;
      wen_r <= 4'h0;
      wdata <= 32'h0;
    end
    else begin
      if (hitVec_3)
        hitIndex <= 2'h3;
      else if (hitVec_2)
        hitIndex <= 2'h2;
      else if (hitVec_1)
        hitIndex <= 2'h1;
      else if (hitVec_0)
        hitIndex <= 2'h0;
      if (_GEN_0) begin
        if (|io_data_ren)
          r_state <= {1'h0, ~(io_uncached_0 | (|(io_data_addr[1:0]))), 1'h1};
      end
      else if (_GEN_1) begin
        if (io_dev_rrdy)
          r_state <= 3'h2;
      end
      else if (_GEN_2) begin
        if (io_dev_rvalid)
          r_state <= 3'h0;
      end
      else if (_GEN_3) begin
        if (|_GEN_4)
          r_state <= 3'h0;
        else if (io_dev_rrdy)
          r_state <= 3'h4;
      end
      else if (_GEN_8)
        r_state <= 3'h3;
      if (_GEN_0 & (|io_data_ren))
        ren_r <= io_data_ren;
      if (_GEN_10) begin
        if (|io_data_wen)
          w_state <= 2'h1;
      end
      else if (_GEN_11) begin
        if (io_dev_wrdy)
          w_state <= 2'h2;
      end
      else if (_GEN_20 & wr_resp)
        w_state <= 2'h0;
      if (_GEN_10 & (|io_data_wen)) begin
        wen_r <= io_data_wen;
        wdata <= io_data_wdata;
      end
    end
    wr_resp_REG <= io_dev_wrdy;
  end // always @(posedge)
  blk_mem_gen_1 blk_mem_gen_1 (
    .clka  (clock),
    .wea   (tagSrams_0_wea),
    .addra (tagSrams_3_addra),
    .dina  (tagSrams_3_dina),
    .douta (_blk_mem_gen_1_douta)
  );
  blk_mem_gen_1 blk_mem_gen_1_1 (
    .clka  (clock),
    .wea   (tagSrams_1_wea),
    .addra (tagSrams_3_addra),
    .dina  (tagSrams_3_dina),
    .douta (_blk_mem_gen_1_1_douta)
  );
  blk_mem_gen_1 blk_mem_gen_1_2 (
    .clka  (clock),
    .wea   (tagSrams_2_wea),
    .addra (tagSrams_3_addra),
    .dina  (tagSrams_3_dina),
    .douta (_blk_mem_gen_1_2_douta)
  );
  blk_mem_gen_1 blk_mem_gen_1_3 (
    .clka  (clock),
    .wea   (tagSrams_3_wea),
    .addra (tagSrams_3_addra),
    .dina  (tagSrams_3_dina),
    .douta (_blk_mem_gen_1_3_douta)
  );
  blk_mem_gen_1 blk_mem_gen_1_4 (
    .clka  (clock),
    .wea   (~_GEN_10 & _GEN_16 | tagSrams_0_wea),
    .addra (tagSrams_3_addra),
    .dina  (_GEN_10 | ~_GEN_16 ? io_dev_rdata : _dataSrams_dina_T),
    .douta (_blk_mem_gen_1_4_douta)
  );
  blk_mem_gen_1 blk_mem_gen_1_5 (
    .clka  (clock),
    .wea   (~_GEN_10 & _GEN_17 | tagSrams_1_wea),
    .addra (tagSrams_3_addra),
    .dina  (_GEN_10 | ~_GEN_17 ? io_dev_rdata : _dataSrams_dina_T),
    .douta (_blk_mem_gen_1_5_douta)
  );
  blk_mem_gen_1 blk_mem_gen_1_6 (
    .clka  (clock),
    .wea   (~_GEN_10 & _GEN_18 | tagSrams_2_wea),
    .addra (tagSrams_3_addra),
    .dina  (_GEN_10 | ~_GEN_18 ? io_dev_rdata : _dataSrams_dina_T),
    .douta (_blk_mem_gen_1_6_douta)
  );
  blk_mem_gen_1 blk_mem_gen_1_7 (
    .clka  (clock),
    .wea   (~_GEN_10 & _GEN_19 | tagSrams_3_wea),
    .addra (tagSrams_3_addra),
    .dina  (_GEN_10 | ~_GEN_19 ? io_dev_rdata : _dataSrams_dina_T),
    .douta (_blk_mem_gen_1_7_douta)
  );
  LRU lru (
    .clock       (clock),
    .reset       (reset),
    .io_hitVec_0 (hitVec_0),
    .io_hitVec_1 (hitVec_1),
    .io_hitVec_2 (hitVec_2),
    .io_hitVec_3 (hitVec_3),
    .io_victim   (_lru_io_victim)
  );
  assign io_data_valid = ~_GEN_6 & (_GEN_2 ? io_dev_rvalid : _GEN_5);
  assign io_data_rdata =
    _GEN_6
      ? 32'h0
      : _GEN_2
          ? (io_dev_rvalid ? io_dev_rdata[31:0] : 32'h0)
          : _GEN_3 & (|_GEN_4) ? _GEN_7[io_data_addr[3:2]] : 32'h0;
  assign io_data_wresp = ~(_GEN_10 | _GEN_11) & _GEN_20 & wr_resp;
  assign io_dev_wen = _GEN_13 ? 4'h0 : wen_r;
  assign io_dev_waddr = _GEN_13 ? 32'h0 : io_data_addr;
  assign io_dev_wdata = _GEN_13 ? 32'h0 : wdata;
  assign io_dev_ren =
    _GEN_0
      ? 4'h0
      : _GEN_1
          ? (io_dev_rrdy ? ren_r : 4'h0)
          : _GEN_2 | ~_GEN_3 | (|_GEN_4) ? 4'h0 : {4{io_dev_rrdy}};
  assign io_dev_raddr =
    _GEN_0
      ? 32'h0
      : _GEN_1
          ? (io_dev_rrdy ? io_data_addr : 32'h0)
          : _GEN_2 | ~_GEN_3 | (|_GEN_4) | ~io_dev_rrdy
              ? 32'h0
              : {io_data_addr[31:4], 4'h0};
  assign io_hit_r = ~(_GEN_0 | _GEN_1 | _GEN_2) & _GEN_5;
  assign io_hit_w = ~_GEN_10 & _GEN_12 & _GEN_14;
  assign io_uncached = io_uncached_0;
endmodule

